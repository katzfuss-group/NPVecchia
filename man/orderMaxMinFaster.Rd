% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/faster_orderings.R
\name{orderMaxMinFaster}
\alias{orderMaxMinFaster}
\title{Faster maximin ordering by Euclidean distance}
\usage{
orderMaxMinFaster(locs, low_mem = FALSE)
}
\arguments{
\item{locs}{matrix of n locations in arbitrary dimension (to match input argument of fields::rdist)}

\item{low_mem}{flag that changes the memory requirements of the function. Defaults to false, which allows
the function to calculate the full distance matrix between all locations. If set to true, it will only calculate
one column of the distance matrix at a time, which slows down the function but also decreases memory requirements.}
}
\value{
Maximin ordering of the points
}
\description{
Assumes Euclidean distance and finds maximin ordering. It is equivalent to \code{\link{order_maximin_dist}}
but much faster.
}
\examples{
n <- 100
d <- 3
locationss <- matrix(runif(n * d), nc = d)
ordering <- orderMaxMinFaster(locationss)
}
