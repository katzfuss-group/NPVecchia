% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/faster_orderings.R
\name{order_mm_locations}
\alias{order_mm_locations}
\title{Faster maximin ordering by locations}
\usage{
order_mm_locations(locs)
}
\arguments{
\item{locs}{matrix of locations of points (to match input argument of rdist, see ?rdist)}
}
\value{
Maximin ordering of the locations
}
\description{
This function is a wrapper for \code{\link{order_maximin_dist}} to take in locations as
input and then calculate the whole distance matrix for ordering. The alternative is to use 
\code{\link{orderMaxMinFast}}, but that is much slower assuming the whole distance 
matrix fits in memory. However, the first point in the ordering is calculated differently.
This uses the smallest rowSum (so somewhat central to the point cloud), while
\code{\link{orderMaxMinFast}} uses the point closest to the average of locations.
}
\examples{
num_points <- 1000
locations <- matrix(runif(2 * num_points), nc = 2)
order_locs <- order_mm_locations(locations)

}
