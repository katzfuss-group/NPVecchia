% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/basic_functions.R
\name{minus_loglikeli}
\alias{minus_loglikeli}
\title{Calculates the integrated log likelihood}
\usage{
minus_loglikeli(thetas, datum, NNarray)
}
\arguments{
\item{thetas}{3 real numbers representing the log of the three hyperparameters}

\item{datum}{an N * n matrix of the data (N replications of n locations/variables)}

\item{NNarray}{an n * m2 matrix giving the m nearest neighbors previous in the ordering (or 
outputting NAs if not available [i.e. there are not m previous points]) that are ordered 
for nearest to furthest. It is OK to have m2 large, as it will be reduced to match the size
of the posterior means (i.e. number of columns in the third element of the posteriors), but
never have m2 < 2.}
}
\value{
a numeric value (the negative log likelihood)
}
\description{
Given the three hyperparameters, this calculates the negative of the integrated log-likelihood.
See the mathematical_details pdf for further explanation as needed. It is advised 
to use the C++ version minus_loglikeli_c to improve speed considerably. This 
function is often used with an optimizer or MCMC method to find the optimal 
hyperparameters.
}
\examples{

#' #create fake data and fake neighbor matrix
data <- matrix(rnorm(1e4), nrow = 10)
NNarray <- matrix(NA, nrow = 1e3, ncol = 100)
#can only use previous points in ordering (this is actually 
#impossible in low dimensional space like this is designed for)
for(i in 1:100){
  NNarray[i:1e3,i] <- i
}

#calculates log likelihood
minus_loglikeli(c(1, 1, 1), datum, NNarray)


}
